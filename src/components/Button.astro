---
export interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline' | 'square';
  size?: 'sm' | 'md' | 'lg';
  disabled?: boolean;
  type?: 'button' | 'submit' | 'reset';
  class?: string;
  children?: string;
}

const {
  href,
  variant = 'primary',
  size = 'md',
  disabled = false,
  type = 'button',
  class: className = '',
  children = ''
} = Astro.props;

// Use our global button styles and add extra customization
const baseClass = variant === 'primary' ? 'primary-button' : variant === 'secondary' ? 'secondary-button' : '';

// For outline and square variants, start with secondary button style
const variantClass = variant === 'outline' || variant === 'square' ? 'secondary-button' : baseClass;

// Size classes for additional customization
const sizeClasses = {
  sm: 'text-sm',
  md: '',  // Default size, no additional classes needed
  lg: 'text-lg'
};

// Additional classes for specific variants
let additionalClasses = '';
if (variant === 'square') {
  additionalClasses = 'rounded-md'; // Override the default border-radius for square variant
}

const buttonClasses = `${variantClass} ${sizeClasses[size]} ${additionalClasses} ${className} ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`;

---

{href ? (
  <a href={href} class={buttonClasses} aria-disabled={disabled}>
    <slot>{children}</slot>
  </a>
) : (
  <button type={type} class={buttonClasses} disabled={disabled}>
    <slot>{children}</slot>
  </button>
)}